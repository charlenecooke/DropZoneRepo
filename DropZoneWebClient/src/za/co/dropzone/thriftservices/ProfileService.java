/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package za.co.dropzone.thriftservices;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ProfileService {

  public interface Iface {

    public int createProfile(String organisationName, String shortDescription, String longDescription, String npoNumber, String companyNumber, String trustNumber, String vatNumber, int entityId) throws org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void createProfile(String organisationName, String shortDescription, String longDescription, String npoNumber, String companyNumber, String trustNumber, String vatNumber, int entityId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public int createProfile(String organisationName, String shortDescription, String longDescription, String npoNumber, String companyNumber, String trustNumber, String vatNumber, int entityId) throws org.apache.thrift.TException
    {
      send_createProfile(organisationName, shortDescription, longDescription, npoNumber, companyNumber, trustNumber, vatNumber, entityId);
      return recv_createProfile();
    }

    public void send_createProfile(String organisationName, String shortDescription, String longDescription, String npoNumber, String companyNumber, String trustNumber, String vatNumber, int entityId) throws org.apache.thrift.TException
    {
      createProfile_args args = new createProfile_args();
      args.setOrganisationName(organisationName);
      args.setShortDescription(shortDescription);
      args.setLongDescription(longDescription);
      args.setNpoNumber(npoNumber);
      args.setCompanyNumber(companyNumber);
      args.setTrustNumber(trustNumber);
      args.setVatNumber(vatNumber);
      args.setEntityId(entityId);
      sendBase("createProfile", args);
    }

    public int recv_createProfile() throws org.apache.thrift.TException
    {
      createProfile_result result = new createProfile_result();
      receiveBase(result, "createProfile");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "createProfile failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void createProfile(String organisationName, String shortDescription, String longDescription, String npoNumber, String companyNumber, String trustNumber, String vatNumber, int entityId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      createProfile_call method_call = new createProfile_call(organisationName, shortDescription, longDescription, npoNumber, companyNumber, trustNumber, vatNumber, entityId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class createProfile_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String organisationName;
      private String shortDescription;
      private String longDescription;
      private String npoNumber;
      private String companyNumber;
      private String trustNumber;
      private String vatNumber;
      private int entityId;
      public createProfile_call(String organisationName, String shortDescription, String longDescription, String npoNumber, String companyNumber, String trustNumber, String vatNumber, int entityId, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.organisationName = organisationName;
        this.shortDescription = shortDescription;
        this.longDescription = longDescription;
        this.npoNumber = npoNumber;
        this.companyNumber = companyNumber;
        this.trustNumber = trustNumber;
        this.vatNumber = vatNumber;
        this.entityId = entityId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("createProfile", org.apache.thrift.protocol.TMessageType.CALL, 0));
        createProfile_args args = new createProfile_args();
        args.setOrganisationName(organisationName);
        args.setShortDescription(shortDescription);
        args.setLongDescription(longDescription);
        args.setNpoNumber(npoNumber);
        args.setCompanyNumber(companyNumber);
        args.setTrustNumber(trustNumber);
        args.setVatNumber(vatNumber);
        args.setEntityId(entityId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public int getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_createProfile();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("createProfile", new createProfile());
      return processMap;
    }

    public static class createProfile<I extends Iface> extends org.apache.thrift.ProcessFunction<I, createProfile_args> {
      public createProfile() {
        super("createProfile");
      }

      public createProfile_args getEmptyArgsInstance() {
        return new createProfile_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public createProfile_result getResult(I iface, createProfile_args args) throws org.apache.thrift.TException {
        createProfile_result result = new createProfile_result();
        result.success = iface.createProfile(args.organisationName, args.shortDescription, args.longDescription, args.npoNumber, args.companyNumber, args.trustNumber, args.vatNumber, args.entityId);
        result.setSuccessIsSet(true);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("createProfile", new createProfile());
      return processMap;
    }

    public static class createProfile<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, createProfile_args, Integer> {
      public createProfile() {
        super("createProfile");
      }

      public createProfile_args getEmptyArgsInstance() {
        return new createProfile_args();
      }

      public AsyncMethodCallback<Integer> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Integer>() { 
          public void onComplete(Integer o) {
            createProfile_result result = new createProfile_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            createProfile_result result = new createProfile_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, createProfile_args args, org.apache.thrift.async.AsyncMethodCallback<Integer> resultHandler) throws TException {
        iface.createProfile(args.organisationName, args.shortDescription, args.longDescription, args.npoNumber, args.companyNumber, args.trustNumber, args.vatNumber, args.entityId,resultHandler);
      }
    }

  }

  public static class createProfile_args implements org.apache.thrift.TBase<createProfile_args, createProfile_args._Fields>, java.io.Serializable, Cloneable, Comparable<createProfile_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("createProfile_args");

    private static final org.apache.thrift.protocol.TField ORGANISATION_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("organisationName", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField SHORT_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("shortDescription", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField LONG_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("longDescription", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField NPO_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("npoNumber", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField COMPANY_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("companyNumber", org.apache.thrift.protocol.TType.STRING, (short)5);
    private static final org.apache.thrift.protocol.TField TRUST_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("trustNumber", org.apache.thrift.protocol.TType.STRING, (short)6);
    private static final org.apache.thrift.protocol.TField VAT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("vatNumber", org.apache.thrift.protocol.TType.STRING, (short)7);
    private static final org.apache.thrift.protocol.TField ENTITY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("entityId", org.apache.thrift.protocol.TType.I32, (short)8);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new createProfile_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new createProfile_argsTupleSchemeFactory());
    }

    public String organisationName; // required
    public String shortDescription; // required
    public String longDescription; // required
    public String npoNumber; // required
    public String companyNumber; // required
    public String trustNumber; // required
    public String vatNumber; // required
    public int entityId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ORGANISATION_NAME((short)1, "organisationName"),
      SHORT_DESCRIPTION((short)2, "shortDescription"),
      LONG_DESCRIPTION((short)3, "longDescription"),
      NPO_NUMBER((short)4, "npoNumber"),
      COMPANY_NUMBER((short)5, "companyNumber"),
      TRUST_NUMBER((short)6, "trustNumber"),
      VAT_NUMBER((short)7, "vatNumber"),
      ENTITY_ID((short)8, "entityId");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ORGANISATION_NAME
            return ORGANISATION_NAME;
          case 2: // SHORT_DESCRIPTION
            return SHORT_DESCRIPTION;
          case 3: // LONG_DESCRIPTION
            return LONG_DESCRIPTION;
          case 4: // NPO_NUMBER
            return NPO_NUMBER;
          case 5: // COMPANY_NUMBER
            return COMPANY_NUMBER;
          case 6: // TRUST_NUMBER
            return TRUST_NUMBER;
          case 7: // VAT_NUMBER
            return VAT_NUMBER;
          case 8: // ENTITY_ID
            return ENTITY_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ENTITYID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ORGANISATION_NAME, new org.apache.thrift.meta_data.FieldMetaData("organisationName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.SHORT_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("shortDescription", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.LONG_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("longDescription", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.NPO_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("npoNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.COMPANY_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("companyNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.TRUST_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("trustNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.VAT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("vatNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ENTITY_ID, new org.apache.thrift.meta_data.FieldMetaData("entityId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(createProfile_args.class, metaDataMap);
    }

    public createProfile_args() {
    }

    public createProfile_args(
      String organisationName,
      String shortDescription,
      String longDescription,
      String npoNumber,
      String companyNumber,
      String trustNumber,
      String vatNumber,
      int entityId)
    {
      this();
      this.organisationName = organisationName;
      this.shortDescription = shortDescription;
      this.longDescription = longDescription;
      this.npoNumber = npoNumber;
      this.companyNumber = companyNumber;
      this.trustNumber = trustNumber;
      this.vatNumber = vatNumber;
      this.entityId = entityId;
      setEntityIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public createProfile_args(createProfile_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetOrganisationName()) {
        this.organisationName = other.organisationName;
      }
      if (other.isSetShortDescription()) {
        this.shortDescription = other.shortDescription;
      }
      if (other.isSetLongDescription()) {
        this.longDescription = other.longDescription;
      }
      if (other.isSetNpoNumber()) {
        this.npoNumber = other.npoNumber;
      }
      if (other.isSetCompanyNumber()) {
        this.companyNumber = other.companyNumber;
      }
      if (other.isSetTrustNumber()) {
        this.trustNumber = other.trustNumber;
      }
      if (other.isSetVatNumber()) {
        this.vatNumber = other.vatNumber;
      }
      this.entityId = other.entityId;
    }

    public createProfile_args deepCopy() {
      return new createProfile_args(this);
    }

    @Override
    public void clear() {
      this.organisationName = null;
      this.shortDescription = null;
      this.longDescription = null;
      this.npoNumber = null;
      this.companyNumber = null;
      this.trustNumber = null;
      this.vatNumber = null;
      setEntityIdIsSet(false);
      this.entityId = 0;
    }

    public String getOrganisationName() {
      return this.organisationName;
    }

    public createProfile_args setOrganisationName(String organisationName) {
      this.organisationName = organisationName;
      return this;
    }

    public void unsetOrganisationName() {
      this.organisationName = null;
    }

    /** Returns true if field organisationName is set (has been assigned a value) and false otherwise */
    public boolean isSetOrganisationName() {
      return this.organisationName != null;
    }

    public void setOrganisationNameIsSet(boolean value) {
      if (!value) {
        this.organisationName = null;
      }
    }

    public String getShortDescription() {
      return this.shortDescription;
    }

    public createProfile_args setShortDescription(String shortDescription) {
      this.shortDescription = shortDescription;
      return this;
    }

    public void unsetShortDescription() {
      this.shortDescription = null;
    }

    /** Returns true if field shortDescription is set (has been assigned a value) and false otherwise */
    public boolean isSetShortDescription() {
      return this.shortDescription != null;
    }

    public void setShortDescriptionIsSet(boolean value) {
      if (!value) {
        this.shortDescription = null;
      }
    }

    public String getLongDescription() {
      return this.longDescription;
    }

    public createProfile_args setLongDescription(String longDescription) {
      this.longDescription = longDescription;
      return this;
    }

    public void unsetLongDescription() {
      this.longDescription = null;
    }

    /** Returns true if field longDescription is set (has been assigned a value) and false otherwise */
    public boolean isSetLongDescription() {
      return this.longDescription != null;
    }

    public void setLongDescriptionIsSet(boolean value) {
      if (!value) {
        this.longDescription = null;
      }
    }

    public String getNpoNumber() {
      return this.npoNumber;
    }

    public createProfile_args setNpoNumber(String npoNumber) {
      this.npoNumber = npoNumber;
      return this;
    }

    public void unsetNpoNumber() {
      this.npoNumber = null;
    }

    /** Returns true if field npoNumber is set (has been assigned a value) and false otherwise */
    public boolean isSetNpoNumber() {
      return this.npoNumber != null;
    }

    public void setNpoNumberIsSet(boolean value) {
      if (!value) {
        this.npoNumber = null;
      }
    }

    public String getCompanyNumber() {
      return this.companyNumber;
    }

    public createProfile_args setCompanyNumber(String companyNumber) {
      this.companyNumber = companyNumber;
      return this;
    }

    public void unsetCompanyNumber() {
      this.companyNumber = null;
    }

    /** Returns true if field companyNumber is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyNumber() {
      return this.companyNumber != null;
    }

    public void setCompanyNumberIsSet(boolean value) {
      if (!value) {
        this.companyNumber = null;
      }
    }

    public String getTrustNumber() {
      return this.trustNumber;
    }

    public createProfile_args setTrustNumber(String trustNumber) {
      this.trustNumber = trustNumber;
      return this;
    }

    public void unsetTrustNumber() {
      this.trustNumber = null;
    }

    /** Returns true if field trustNumber is set (has been assigned a value) and false otherwise */
    public boolean isSetTrustNumber() {
      return this.trustNumber != null;
    }

    public void setTrustNumberIsSet(boolean value) {
      if (!value) {
        this.trustNumber = null;
      }
    }

    public String getVatNumber() {
      return this.vatNumber;
    }

    public createProfile_args setVatNumber(String vatNumber) {
      this.vatNumber = vatNumber;
      return this;
    }

    public void unsetVatNumber() {
      this.vatNumber = null;
    }

    /** Returns true if field vatNumber is set (has been assigned a value) and false otherwise */
    public boolean isSetVatNumber() {
      return this.vatNumber != null;
    }

    public void setVatNumberIsSet(boolean value) {
      if (!value) {
        this.vatNumber = null;
      }
    }

    public int getEntityId() {
      return this.entityId;
    }

    public createProfile_args setEntityId(int entityId) {
      this.entityId = entityId;
      setEntityIdIsSet(true);
      return this;
    }

    public void unsetEntityId() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENTITYID_ISSET_ID);
    }

    /** Returns true if field entityId is set (has been assigned a value) and false otherwise */
    public boolean isSetEntityId() {
      return EncodingUtils.testBit(__isset_bitfield, __ENTITYID_ISSET_ID);
    }

    public void setEntityIdIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENTITYID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ORGANISATION_NAME:
        if (value == null) {
          unsetOrganisationName();
        } else {
          setOrganisationName((String)value);
        }
        break;

      case SHORT_DESCRIPTION:
        if (value == null) {
          unsetShortDescription();
        } else {
          setShortDescription((String)value);
        }
        break;

      case LONG_DESCRIPTION:
        if (value == null) {
          unsetLongDescription();
        } else {
          setLongDescription((String)value);
        }
        break;

      case NPO_NUMBER:
        if (value == null) {
          unsetNpoNumber();
        } else {
          setNpoNumber((String)value);
        }
        break;

      case COMPANY_NUMBER:
        if (value == null) {
          unsetCompanyNumber();
        } else {
          setCompanyNumber((String)value);
        }
        break;

      case TRUST_NUMBER:
        if (value == null) {
          unsetTrustNumber();
        } else {
          setTrustNumber((String)value);
        }
        break;

      case VAT_NUMBER:
        if (value == null) {
          unsetVatNumber();
        } else {
          setVatNumber((String)value);
        }
        break;

      case ENTITY_ID:
        if (value == null) {
          unsetEntityId();
        } else {
          setEntityId((Integer)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ORGANISATION_NAME:
        return getOrganisationName();

      case SHORT_DESCRIPTION:
        return getShortDescription();

      case LONG_DESCRIPTION:
        return getLongDescription();

      case NPO_NUMBER:
        return getNpoNumber();

      case COMPANY_NUMBER:
        return getCompanyNumber();

      case TRUST_NUMBER:
        return getTrustNumber();

      case VAT_NUMBER:
        return getVatNumber();

      case ENTITY_ID:
        return Integer.valueOf(getEntityId());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ORGANISATION_NAME:
        return isSetOrganisationName();
      case SHORT_DESCRIPTION:
        return isSetShortDescription();
      case LONG_DESCRIPTION:
        return isSetLongDescription();
      case NPO_NUMBER:
        return isSetNpoNumber();
      case COMPANY_NUMBER:
        return isSetCompanyNumber();
      case TRUST_NUMBER:
        return isSetTrustNumber();
      case VAT_NUMBER:
        return isSetVatNumber();
      case ENTITY_ID:
        return isSetEntityId();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof createProfile_args)
        return this.equals((createProfile_args)that);
      return false;
    }

    public boolean equals(createProfile_args that) {
      if (that == null)
        return false;

      boolean this_present_organisationName = true && this.isSetOrganisationName();
      boolean that_present_organisationName = true && that.isSetOrganisationName();
      if (this_present_organisationName || that_present_organisationName) {
        if (!(this_present_organisationName && that_present_organisationName))
          return false;
        if (!this.organisationName.equals(that.organisationName))
          return false;
      }

      boolean this_present_shortDescription = true && this.isSetShortDescription();
      boolean that_present_shortDescription = true && that.isSetShortDescription();
      if (this_present_shortDescription || that_present_shortDescription) {
        if (!(this_present_shortDescription && that_present_shortDescription))
          return false;
        if (!this.shortDescription.equals(that.shortDescription))
          return false;
      }

      boolean this_present_longDescription = true && this.isSetLongDescription();
      boolean that_present_longDescription = true && that.isSetLongDescription();
      if (this_present_longDescription || that_present_longDescription) {
        if (!(this_present_longDescription && that_present_longDescription))
          return false;
        if (!this.longDescription.equals(that.longDescription))
          return false;
      }

      boolean this_present_npoNumber = true && this.isSetNpoNumber();
      boolean that_present_npoNumber = true && that.isSetNpoNumber();
      if (this_present_npoNumber || that_present_npoNumber) {
        if (!(this_present_npoNumber && that_present_npoNumber))
          return false;
        if (!this.npoNumber.equals(that.npoNumber))
          return false;
      }

      boolean this_present_companyNumber = true && this.isSetCompanyNumber();
      boolean that_present_companyNumber = true && that.isSetCompanyNumber();
      if (this_present_companyNumber || that_present_companyNumber) {
        if (!(this_present_companyNumber && that_present_companyNumber))
          return false;
        if (!this.companyNumber.equals(that.companyNumber))
          return false;
      }

      boolean this_present_trustNumber = true && this.isSetTrustNumber();
      boolean that_present_trustNumber = true && that.isSetTrustNumber();
      if (this_present_trustNumber || that_present_trustNumber) {
        if (!(this_present_trustNumber && that_present_trustNumber))
          return false;
        if (!this.trustNumber.equals(that.trustNumber))
          return false;
      }

      boolean this_present_vatNumber = true && this.isSetVatNumber();
      boolean that_present_vatNumber = true && that.isSetVatNumber();
      if (this_present_vatNumber || that_present_vatNumber) {
        if (!(this_present_vatNumber && that_present_vatNumber))
          return false;
        if (!this.vatNumber.equals(that.vatNumber))
          return false;
      }

      boolean this_present_entityId = true;
      boolean that_present_entityId = true;
      if (this_present_entityId || that_present_entityId) {
        if (!(this_present_entityId && that_present_entityId))
          return false;
        if (this.entityId != that.entityId)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(createProfile_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetOrganisationName()).compareTo(other.isSetOrganisationName());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOrganisationName()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.organisationName, other.organisationName);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetShortDescription()).compareTo(other.isSetShortDescription());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetShortDescription()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shortDescription, other.shortDescription);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetLongDescription()).compareTo(other.isSetLongDescription());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLongDescription()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.longDescription, other.longDescription);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetNpoNumber()).compareTo(other.isSetNpoNumber());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetNpoNumber()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.npoNumber, other.npoNumber);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetCompanyNumber()).compareTo(other.isSetCompanyNumber());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyNumber()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyNumber, other.companyNumber);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetTrustNumber()).compareTo(other.isSetTrustNumber());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTrustNumber()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trustNumber, other.trustNumber);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetVatNumber()).compareTo(other.isSetVatNumber());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetVatNumber()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vatNumber, other.vatNumber);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetEntityId()).compareTo(other.isSetEntityId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEntityId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.entityId, other.entityId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("createProfile_args(");
      boolean first = true;

      sb.append("organisationName:");
      if (this.organisationName == null) {
        sb.append("null");
      } else {
        sb.append(this.organisationName);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("shortDescription:");
      if (this.shortDescription == null) {
        sb.append("null");
      } else {
        sb.append(this.shortDescription);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("longDescription:");
      if (this.longDescription == null) {
        sb.append("null");
      } else {
        sb.append(this.longDescription);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("npoNumber:");
      if (this.npoNumber == null) {
        sb.append("null");
      } else {
        sb.append(this.npoNumber);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("companyNumber:");
      if (this.companyNumber == null) {
        sb.append("null");
      } else {
        sb.append(this.companyNumber);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("trustNumber:");
      if (this.trustNumber == null) {
        sb.append("null");
      } else {
        sb.append(this.trustNumber);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("vatNumber:");
      if (this.vatNumber == null) {
        sb.append("null");
      } else {
        sb.append(this.vatNumber);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("entityId:");
      sb.append(this.entityId);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class createProfile_argsStandardSchemeFactory implements SchemeFactory {
      public createProfile_argsStandardScheme getScheme() {
        return new createProfile_argsStandardScheme();
      }
    }

    private static class createProfile_argsStandardScheme extends StandardScheme<createProfile_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, createProfile_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ORGANISATION_NAME
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.organisationName = iprot.readString();
                struct.setOrganisationNameIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // SHORT_DESCRIPTION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.shortDescription = iprot.readString();
                struct.setShortDescriptionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // LONG_DESCRIPTION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.longDescription = iprot.readString();
                struct.setLongDescriptionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // NPO_NUMBER
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.npoNumber = iprot.readString();
                struct.setNpoNumberIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // COMPANY_NUMBER
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.companyNumber = iprot.readString();
                struct.setCompanyNumberIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 6: // TRUST_NUMBER
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.trustNumber = iprot.readString();
                struct.setTrustNumberIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 7: // VAT_NUMBER
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.vatNumber = iprot.readString();
                struct.setVatNumberIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 8: // ENTITY_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.entityId = iprot.readI32();
                struct.setEntityIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, createProfile_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.organisationName != null) {
          oprot.writeFieldBegin(ORGANISATION_NAME_FIELD_DESC);
          oprot.writeString(struct.organisationName);
          oprot.writeFieldEnd();
        }
        if (struct.shortDescription != null) {
          oprot.writeFieldBegin(SHORT_DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.shortDescription);
          oprot.writeFieldEnd();
        }
        if (struct.longDescription != null) {
          oprot.writeFieldBegin(LONG_DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.longDescription);
          oprot.writeFieldEnd();
        }
        if (struct.npoNumber != null) {
          oprot.writeFieldBegin(NPO_NUMBER_FIELD_DESC);
          oprot.writeString(struct.npoNumber);
          oprot.writeFieldEnd();
        }
        if (struct.companyNumber != null) {
          oprot.writeFieldBegin(COMPANY_NUMBER_FIELD_DESC);
          oprot.writeString(struct.companyNumber);
          oprot.writeFieldEnd();
        }
        if (struct.trustNumber != null) {
          oprot.writeFieldBegin(TRUST_NUMBER_FIELD_DESC);
          oprot.writeString(struct.trustNumber);
          oprot.writeFieldEnd();
        }
        if (struct.vatNumber != null) {
          oprot.writeFieldBegin(VAT_NUMBER_FIELD_DESC);
          oprot.writeString(struct.vatNumber);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(ENTITY_ID_FIELD_DESC);
        oprot.writeI32(struct.entityId);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class createProfile_argsTupleSchemeFactory implements SchemeFactory {
      public createProfile_argsTupleScheme getScheme() {
        return new createProfile_argsTupleScheme();
      }
    }

    private static class createProfile_argsTupleScheme extends TupleScheme<createProfile_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, createProfile_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetOrganisationName()) {
          optionals.set(0);
        }
        if (struct.isSetShortDescription()) {
          optionals.set(1);
        }
        if (struct.isSetLongDescription()) {
          optionals.set(2);
        }
        if (struct.isSetNpoNumber()) {
          optionals.set(3);
        }
        if (struct.isSetCompanyNumber()) {
          optionals.set(4);
        }
        if (struct.isSetTrustNumber()) {
          optionals.set(5);
        }
        if (struct.isSetVatNumber()) {
          optionals.set(6);
        }
        if (struct.isSetEntityId()) {
          optionals.set(7);
        }
        oprot.writeBitSet(optionals, 8);
        if (struct.isSetOrganisationName()) {
          oprot.writeString(struct.organisationName);
        }
        if (struct.isSetShortDescription()) {
          oprot.writeString(struct.shortDescription);
        }
        if (struct.isSetLongDescription()) {
          oprot.writeString(struct.longDescription);
        }
        if (struct.isSetNpoNumber()) {
          oprot.writeString(struct.npoNumber);
        }
        if (struct.isSetCompanyNumber()) {
          oprot.writeString(struct.companyNumber);
        }
        if (struct.isSetTrustNumber()) {
          oprot.writeString(struct.trustNumber);
        }
        if (struct.isSetVatNumber()) {
          oprot.writeString(struct.vatNumber);
        }
        if (struct.isSetEntityId()) {
          oprot.writeI32(struct.entityId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, createProfile_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(8);
        if (incoming.get(0)) {
          struct.organisationName = iprot.readString();
          struct.setOrganisationNameIsSet(true);
        }
        if (incoming.get(1)) {
          struct.shortDescription = iprot.readString();
          struct.setShortDescriptionIsSet(true);
        }
        if (incoming.get(2)) {
          struct.longDescription = iprot.readString();
          struct.setLongDescriptionIsSet(true);
        }
        if (incoming.get(3)) {
          struct.npoNumber = iprot.readString();
          struct.setNpoNumberIsSet(true);
        }
        if (incoming.get(4)) {
          struct.companyNumber = iprot.readString();
          struct.setCompanyNumberIsSet(true);
        }
        if (incoming.get(5)) {
          struct.trustNumber = iprot.readString();
          struct.setTrustNumberIsSet(true);
        }
        if (incoming.get(6)) {
          struct.vatNumber = iprot.readString();
          struct.setVatNumberIsSet(true);
        }
        if (incoming.get(7)) {
          struct.entityId = iprot.readI32();
          struct.setEntityIdIsSet(true);
        }
      }
    }

  }

  public static class createProfile_result implements org.apache.thrift.TBase<createProfile_result, createProfile_result._Fields>, java.io.Serializable, Cloneable, Comparable<createProfile_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("createProfile_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.I32, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new createProfile_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new createProfile_resultTupleSchemeFactory());
    }

    public int success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(createProfile_result.class, metaDataMap);
    }

    public createProfile_result() {
    }

    public createProfile_result(
      int success)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public createProfile_result(createProfile_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
    }

    public createProfile_result deepCopy() {
      return new createProfile_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = 0;
    }

    public int getSuccess() {
      return this.success;
    }

    public createProfile_result setSuccess(int success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Integer)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return Integer.valueOf(getSuccess());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof createProfile_result)
        return this.equals((createProfile_result)that);
      return false;
    }

    public boolean equals(createProfile_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(createProfile_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("createProfile_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class createProfile_resultStandardSchemeFactory implements SchemeFactory {
      public createProfile_resultStandardScheme getScheme() {
        return new createProfile_resultStandardScheme();
      }
    }

    private static class createProfile_resultStandardScheme extends StandardScheme<createProfile_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, createProfile_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.success = iprot.readI32();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, createProfile_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeI32(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class createProfile_resultTupleSchemeFactory implements SchemeFactory {
      public createProfile_resultTupleScheme getScheme() {
        return new createProfile_resultTupleScheme();
      }
    }

    private static class createProfile_resultTupleScheme extends TupleScheme<createProfile_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, createProfile_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeI32(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, createProfile_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readI32();
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

}
